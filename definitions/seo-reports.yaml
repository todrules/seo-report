paths:
  '/Users/{id}/accessTokens/{fk}':
    get:
      tags:
        - User
      summary: Find a related item by id for accessTokens.
      operationId: User.prototype.__findById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - User
      summary: Delete a related item by id for accessTokens.
      operationId: User.prototype.__destroyById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - User
      summary: Update a related item by id for accessTokens.
      operationId: User.prototype.__updateById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
  '/Users/{id}/accessTokens':
    get:
      tags:
        - User
      summary: Queries accessTokens of User.
      operationId: User.prototype.__get__accessTokens
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessToken'
      deprecated: false
    post:
      tags:
        - User
      summary: Creates a new instance in accessTokens of this model.
      operationId: User.prototype.__create__accessTokens
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - User
      summary: Deletes all accessTokens of this model.
      operationId: User.prototype.__delete__accessTokens
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Users/{id}/accessTokens/count':
    get:
      tags:
        - User
      summary: Counts accessTokens of User.
      operationId: User.prototype.__count__accessTokens
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Users:
    post:
      tags:
        - User
      summary: Create a new instance of the model and persist it into the data source.
      operationId: User.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    put:
      tags:
        - User
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: User.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    get:
      tags:
        - User
      summary: Find all instances of the model matched by filter from the data source.
      operationId: User.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      deprecated: false
  '/Users/{id}/exists':
    get:
      tags:
        - User
      summary: Check whether a model instance exists in the data source.
      operationId: 'User.exists__get_Users_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Users/{id}':
    head:
      tags:
        - User
      summary: Check whether a model instance exists in the data source.
      operationId: 'User.exists__head_Users_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - User
      summary: Find a model instance by id from the data source.
      operationId: User.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    delete:
      tags:
        - User
      summary: Delete a model instance by id from the data source.
      operationId: User.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - User
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: User.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/User'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  /Users/findOne:
    get:
      tags:
        - User
      summary: Find first instance of the model matched by filter from the data source.
      operationId: User.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  /Users/update:
    post:
      tags:
        - User
      summary: Update instances of the model matched by where from the data source.
      operationId: User.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Users/count:
    get:
      tags:
        - User
      summary: Count instances of the model matched by where from the data source.
      operationId: User.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Users/change-stream:
    post:
      tags:
        - User
      summary: Create a change stream.
      operationId: User.createChangeStream__post_Users_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - User
      summary: Create a change stream.
      operationId: User.createChangeStream__get_Users_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Users/login:
    post:
      tags:
        - User
      summary: Login a user with username/email and password.
      operationId: User.login
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
        - name: include
          in: query
          description: Related objects to include in the response. See the description of return value for more details.
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            description: >+
              The response body contains properties of the AccessToken created on
              login.

              Depending on the value of `include` parameter, the body may contain
              additional properties:



                - `user` - `{User}` - Data of the currently logged in user.
              (`include=user`)


            type: object
      deprecated: false
  /Users/logout:
    post:
      tags:
        - User
      summary: Logout a user with access token.
      operationId: User.logout
      parameters: []
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Users/confirm:
    get:
      tags:
        - User
      summary: Confirm a user registration with email verification token.
      operationId: User.confirm
      parameters:
        - name: uid
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
        - name: redirect
          in: query
          required: false
          type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Users/reset:
    post:
      tags:
        - User
      summary: Reset password for a user with email.
      operationId: User.resetPassword
      parameters:
        - name: options
          in: body
          required: true
          schema:
            type: object
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Operators/{id}/accessTokens/{fk}':
    get:
      tags:
        - Operator
      summary: Find a related item by id for accessTokens.
      operationId: Operator.prototype.__findById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - Operator
      summary: Delete a related item by id for accessTokens.
      operationId: Operator.prototype.__destroyById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Operator
      summary: Update a related item by id for accessTokens.
      operationId: Operator.prototype.__updateById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
  '/Operators/{id}/company/{fk}':
    get:
      tags:
        - Operator
      summary: Find a related item by id for company.
      operationId: Operator.prototype.__findById__company
      parameters:
        - name: fk
          in: path
          description: Foreign key for company
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
    delete:
      tags:
        - Operator
      summary: Delete a related item by id for company.
      operationId: Operator.prototype.__destroyById__company
      parameters:
        - name: fk
          in: path
          description: Foreign key for company
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Operator
      summary: Update a related item by id for company.
      operationId: Operator.prototype.__updateById__company
      parameters:
        - name: fk
          in: path
          description: Foreign key for company
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Company'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/Operators/{id}/accessTokens':
    get:
      tags:
        - Operator
      summary: Queries accessTokens of Operator.
      operationId: Operator.prototype.__get__accessTokens
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessToken'
      deprecated: false
    post:
      tags:
        - Operator
      summary: Creates a new instance in accessTokens of this model.
      operationId: Operator.prototype.__create__accessTokens
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - Operator
      summary: Deletes all accessTokens of this model.
      operationId: Operator.prototype.__delete__accessTokens
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Operators/{id}/accessTokens/count':
    get:
      tags:
        - Operator
      summary: Counts accessTokens of Operator.
      operationId: Operator.prototype.__count__accessTokens
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Operators/{id}/company':
    get:
      tags:
        - Operator
      summary: Queries company of Operator.
      operationId: Operator.prototype.__get__company
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
      deprecated: false
    post:
      tags:
        - Operator
      summary: Creates a new instance in company of this model.
      operationId: Operator.prototype.__create__company
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Company'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
    delete:
      tags:
        - Operator
      summary: Deletes all company of this model.
      operationId: Operator.prototype.__delete__company
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Operators/{id}/company/count':
    get:
      tags:
        - Operator
      summary: Counts company of Operator.
      operationId: Operator.prototype.__count__company
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Operators:
    post:
      tags:
        - Operator
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Operator.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Operator'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
    put:
      tags:
        - Operator
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: Operator.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Operator'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
    get:
      tags:
        - Operator
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Operator.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Operator'
      deprecated: false
  '/Operators/{id}/exists':
    get:
      tags:
        - Operator
      summary: Check whether a model instance exists in the data source.
      operationId: 'Operator.exists__get_Operators_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Operators/{id}':
    head:
      tags:
        - Operator
      summary: Check whether a model instance exists in the data source.
      operationId: 'Operator.exists__head_Operators_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Operator
      summary: Find a model instance by id from the data source.
      operationId: Operator.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
    delete:
      tags:
        - Operator
      summary: Delete a model instance by id from the data source.
      operationId: Operator.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Operator
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: Operator.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Operator'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
  /Operators/findOne:
    get:
      tags:
        - Operator
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Operator.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
  /Operators/update:
    post:
      tags:
        - Operator
      summary: Update instances of the model matched by where from the data source.
      operationId: Operator.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Operator'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Operators/count:
    get:
      tags:
        - Operator
      summary: Count instances of the model matched by where from the data source.
      operationId: Operator.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Operators/change-stream:
    post:
      tags:
        - Operator
      summary: Create a change stream.
      operationId: Operator.createChangeStream__post_Operators_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Operator
      summary: Create a change stream.
      operationId: Operator.createChangeStream__get_Operators_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Operators/login:
    post:
      tags:
        - Operator
      summary: Login a user with username/email and password.
      operationId: Operator.login
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
        - name: include
          in: query
          description: Related objects to include in the response. See the description of return value for more details.
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            description: >+
              The response body contains properties of the AccessToken created on
              login.

              Depending on the value of `include` parameter, the body may contain
              additional properties:



                - `user` - `{User}` - Data of the currently logged in user.
              (`include=user`)


            type: object
      deprecated: false
  /Operators/logout:
    post:
      tags:
        - Operator
      summary: Logout a user with access token.
      operationId: Operator.logout
      parameters: []
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Operators/confirm:
    get:
      tags:
        - Operator
      summary: Confirm a user registration with email verification token.
      operationId: Operator.confirm
      parameters:
        - name: uid
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
        - name: redirect
          in: query
          required: false
          type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Operators/reset:
    post:
      tags:
        - Operator
      summary: Reset password for a user with email.
      operationId: Operator.resetPassword
      parameters:
        - name: options
          in: body
          required: true
          schema:
            type: object
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/members/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for members.
      operationId: Company.prototype.__findById__members
      parameters:
        - name: fk
          in: path
          description: Foreign key for members
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for members.
      operationId: Company.prototype.__destroyById__members
      parameters:
        - name: fk
          in: path
          description: Foreign key for members
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for members.
      operationId: Company.prototype.__updateById__members
      parameters:
        - name: fk
          in: path
          description: Foreign key for members
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Operator'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
  '/Companies/{id}/metrics/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for metrics.
      operationId: Company.prototype.__findById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for metrics.
      operationId: Company.prototype.__destroyById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for metrics.
      operationId: Company.prototype.__updateById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
  '/Companies/{id}/competitorMetrics/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for competitorMetrics.
      operationId: Company.prototype.__findById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for competitorMetrics.
      operationId: Company.prototype.__destroyById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for competitorMetrics.
      operationId: Company.prototype.__updateById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
  '/Companies/{id}/competitors/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for competitors.
      operationId: Company.prototype.__findById__competitors
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitors
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for competitors.
      operationId: Company.prototype.__destroyById__competitors
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitors
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for competitors.
      operationId: Company.prototype.__updateById__competitors
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitors
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Competitor'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
  '/Companies/{id}/keywordMetrics/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for keywordMetrics.
      operationId: Company.prototype.__findById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for keywordMetrics.
      operationId: Company.prototype.__destroyById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for keywordMetrics.
      operationId: Company.prototype.__updateById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
  '/Companies/{id}/keywords/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for keywords.
      operationId: Company.prototype.__findById__keywords
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywords
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for keywords.
      operationId: Company.prototype.__destroyById__keywords
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywords
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for keywords.
      operationId: Company.prototype.__updateById__keywords
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywords
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Keyword'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
  '/Companies/{id}/landingPages/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for landingPages.
      operationId: Company.prototype.__findById__landingPages
      parameters:
        - name: fk
          in: path
          description: Foreign key for landingPages
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for landingPages.
      operationId: Company.prototype.__destroyById__landingPages
      parameters:
        - name: fk
          in: path
          description: Foreign key for landingPages
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for landingPages.
      operationId: Company.prototype.__updateById__landingPages
      parameters:
        - name: fk
          in: path
          description: Foreign key for landingPages
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
  '/Companies/{id}/referrers/{fk}':
    get:
      tags:
        - Company
      summary: Find a related item by id for referrers.
      operationId: Company.prototype.__findById__referrers
      parameters:
        - name: fk
          in: path
          description: Foreign key for referrers
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a related item by id for referrers.
      operationId: Company.prototype.__destroyById__referrers
      parameters:
        - name: fk
          in: path
          description: Foreign key for referrers
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Company
      summary: Update a related item by id for referrers.
      operationId: Company.prototype.__updateById__referrers
      parameters:
        - name: fk
          in: path
          description: Foreign key for referrers
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Referrer'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
  '/Companies/{id}/members':
    get:
      tags:
        - Company
      summary: Queries members of Company.
      operationId: Company.prototype.__get__members
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Operator'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in members of this model.
      operationId: Company.prototype.__create__members
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Operator'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Operator'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all members of this model.
      operationId: Company.prototype.__delete__members
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/members/count':
    get:
      tags:
        - Company
      summary: Counts members of Company.
      operationId: Company.prototype.__count__members
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/metrics':
    get:
      tags:
        - Company
      summary: Queries metrics of Company.
      operationId: Company.prototype.__get__metrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyMetric'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in metrics of this model.
      operationId: Company.prototype.__create__metrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all metrics of this model.
      operationId: Company.prototype.__delete__metrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/metrics/count':
    get:
      tags:
        - Company
      summary: Counts metrics of Company.
      operationId: Company.prototype.__count__metrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/competitorMetrics':
    get:
      tags:
        - Company
      summary: Queries competitorMetrics of Company.
      operationId: Company.prototype.__get__competitorMetrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in competitorMetrics of this model.
      operationId: Company.prototype.__create__competitorMetrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all competitorMetrics of this model.
      operationId: Company.prototype.__delete__competitorMetrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/competitorMetrics/count':
    get:
      tags:
        - Company
      summary: Counts competitorMetrics of Company.
      operationId: Company.prototype.__count__competitorMetrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/competitors':
    get:
      tags:
        - Company
      summary: Queries competitors of Company.
      operationId: Company.prototype.__get__competitors
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Competitor'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in competitors of this model.
      operationId: Company.prototype.__create__competitors
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Competitor'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all competitors of this model.
      operationId: Company.prototype.__delete__competitors
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/competitors/count':
    get:
      tags:
        - Company
      summary: Counts competitors of Company.
      operationId: Company.prototype.__count__competitors
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/keywordMetrics':
    get:
      tags:
        - Company
      summary: Queries keywordMetrics of Company.
      operationId: Company.prototype.__get__keywordMetrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/KeywordMetric'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in keywordMetrics of this model.
      operationId: Company.prototype.__create__keywordMetrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all keywordMetrics of this model.
      operationId: Company.prototype.__delete__keywordMetrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/keywordMetrics/count':
    get:
      tags:
        - Company
      summary: Counts keywordMetrics of Company.
      operationId: Company.prototype.__count__keywordMetrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/keywords':
    get:
      tags:
        - Company
      summary: Queries keywords of Company.
      operationId: Company.prototype.__get__keywords
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Keyword'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in keywords of this model.
      operationId: Company.prototype.__create__keywords
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Keyword'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all keywords of this model.
      operationId: Company.prototype.__delete__keywords
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/keywords/count':
    get:
      tags:
        - Company
      summary: Counts keywords of Company.
      operationId: Company.prototype.__count__keywords
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/landingPages':
    get:
      tags:
        - Company
      summary: Queries landingPages of Company.
      operationId: Company.prototype.__get__landingPages
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/LandingPage'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in landingPages of this model.
      operationId: Company.prototype.__create__landingPages
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all landingPages of this model.
      operationId: Company.prototype.__delete__landingPages
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/landingPages/count':
    get:
      tags:
        - Company
      summary: Counts landingPages of Company.
      operationId: Company.prototype.__count__landingPages
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}/referrers':
    get:
      tags:
        - Company
      summary: Queries referrers of Company.
      operationId: Company.prototype.__get__referrers
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Referrer'
      deprecated: false
    post:
      tags:
        - Company
      summary: Creates a new instance in referrers of this model.
      operationId: Company.prototype.__create__referrers
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Referrer'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Deletes all referrers of this model.
      operationId: Company.prototype.__delete__referrers
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Companies/{id}/referrers/count':
    get:
      tags:
        - Company
      summary: Counts referrers of Company.
      operationId: Company.prototype.__count__referrers
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Companies:
    post:
      tags:
        - Company
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Company.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Company'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
    put:
      tags:
        - Company
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: Company.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Company'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
    get:
      tags:
        - Company
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Company.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
      deprecated: false
  '/Companies/{id}/exists':
    get:
      tags:
        - Company
      summary: Check whether a model instance exists in the data source.
      operationId: 'Company.exists__get_Companies_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Companies/{id}':
    head:
      tags:
        - Company
      summary: Check whether a model instance exists in the data source.
      operationId: 'Company.exists__head_Companies_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Company
      summary: Find a model instance by id from the data source.
      operationId: Company.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
    delete:
      tags:
        - Company
      summary: Delete a model instance by id from the data source.
      operationId: Company.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Company
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: Company.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Company'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  /Companies/findOne:
    get:
      tags:
        - Company
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Company.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  /Companies/update:
    post:
      tags:
        - Company
      summary: Update instances of the model matched by where from the data source.
      operationId: Company.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Company'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Companies/count:
    get:
      tags:
        - Company
      summary: Count instances of the model matched by where from the data source.
      operationId: Company.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Companies/change-stream:
    post:
      tags:
        - Company
      summary: Create a change stream.
      operationId: Company.createChangeStream__post_Companies_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Company
      summary: Create a change stream.
      operationId: Company.createChangeStream__get_Companies_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/CompanyMetrics/{id}/company':
    get:
      tags:
        - CompanyMetric
      summary: Fetches belongsTo relation company.
      operationId: CompanyMetric.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  /CompanyMetrics:
    post:
      tags:
        - CompanyMetric
      summary: Create a new instance of the model and persist it into the data source.
      operationId: CompanyMetric.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
    put:
      tags:
        - CompanyMetric
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: CompanyMetric.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
    get:
      tags:
        - CompanyMetric
      summary: Find all instances of the model matched by filter from the data source.
      operationId: CompanyMetric.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyMetric'
      deprecated: false
  '/CompanyMetrics/{id}/exists':
    get:
      tags:
        - CompanyMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'CompanyMetric.exists__get_CompanyMetrics_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/CompanyMetrics/{id}':
    head:
      tags:
        - CompanyMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'CompanyMetric.exists__head_CompanyMetrics_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - CompanyMetric
      summary: Find a model instance by id from the data source.
      operationId: CompanyMetric.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
    delete:
      tags:
        - CompanyMetric
      summary: Delete a model instance by id from the data source.
      operationId: CompanyMetric.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - CompanyMetric
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: CompanyMetric.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
  /CompanyMetrics/findOne:
    get:
      tags:
        - CompanyMetric
      summary: Find first instance of the model matched by filter from the data source.
      operationId: CompanyMetric.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompanyMetric'
      deprecated: false
  /CompanyMetrics/update:
    post:
      tags:
        - CompanyMetric
      summary: Update instances of the model matched by where from the data source.
      operationId: CompanyMetric.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/CompanyMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /CompanyMetrics/count:
    get:
      tags:
        - CompanyMetric
      summary: Count instances of the model matched by where from the data source.
      operationId: CompanyMetric.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /CompanyMetrics/change-stream:
    post:
      tags:
        - CompanyMetric
      summary: Create a change stream.
      operationId: CompanyMetric.createChangeStream__post_CompanyMetrics_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - CompanyMetric
      summary: Create a change stream.
      operationId: CompanyMetric.createChangeStream__get_CompanyMetrics_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/CompetitorMetrics/{id}/company':
    get:
      tags:
        - CompetitorMetric
      summary: Fetches belongsTo relation company.
      operationId: CompetitorMetric.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/CompetitorMetrics/{id}/competitor':
    get:
      tags:
        - CompetitorMetric
      summary: Fetches belongsTo relation competitor.
      operationId: CompetitorMetric.prototype.__get__competitor
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
  /CompetitorMetrics:
    post:
      tags:
        - CompetitorMetric
      summary: Create a new instance of the model and persist it into the data source.
      operationId: CompetitorMetric.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    put:
      tags:
        - CompetitorMetric
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: CompetitorMetric.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    get:
      tags:
        - CompetitorMetric
      summary: Find all instances of the model matched by filter from the data source.
      operationId: CompetitorMetric.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/CompetitorMetric'
      deprecated: false
  '/CompetitorMetrics/{id}/exists':
    get:
      tags:
        - CompetitorMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'CompetitorMetric.exists__get_CompetitorMetrics_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/CompetitorMetrics/{id}':
    head:
      tags:
        - CompetitorMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'CompetitorMetric.exists__head_CompetitorMetrics_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - CompetitorMetric
      summary: Find a model instance by id from the data source.
      operationId: CompetitorMetric.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    delete:
      tags:
        - CompetitorMetric
      summary: Delete a model instance by id from the data source.
      operationId: CompetitorMetric.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - CompetitorMetric
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: CompetitorMetric.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
  /CompetitorMetrics/findOne:
    get:
      tags:
        - CompetitorMetric
      summary: Find first instance of the model matched by filter from the data source.
      operationId: CompetitorMetric.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
  /CompetitorMetrics/update:
    post:
      tags:
        - CompetitorMetric
      summary: Update instances of the model matched by where from the data source.
      operationId: CompetitorMetric.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /CompetitorMetrics/count:
    get:
      tags:
        - CompetitorMetric
      summary: Count instances of the model matched by where from the data source.
      operationId: CompetitorMetric.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /CompetitorMetrics/change-stream:
    post:
      tags:
        - CompetitorMetric
      summary: Create a change stream.
      operationId: CompetitorMetric.createChangeStream__post_CompetitorMetrics_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - CompetitorMetric
      summary: Create a change stream.
      operationId: CompetitorMetric.createChangeStream__get_CompetitorMetrics_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Competitors/{id}/company':
    get:
      tags:
        - Competitor
      summary: Fetches belongsTo relation company.
      operationId: Competitor.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/Competitors/{id}/competitorMetrics/{fk}':
    get:
      tags:
        - Competitor
      summary: Find a related item by id for competitorMetrics.
      operationId: Competitor.prototype.__findById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    delete:
      tags:
        - Competitor
      summary: Delete a related item by id for competitorMetrics.
      operationId: Competitor.prototype.__destroyById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Competitor
      summary: Update a related item by id for competitorMetrics.
      operationId: Competitor.prototype.__updateById__competitorMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for competitorMetrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
  '/Competitors/{id}/competitorMetrics':
    get:
      tags:
        - Competitor
      summary: Queries competitorMetrics of Competitor.
      operationId: Competitor.prototype.__get__competitorMetrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    post:
      tags:
        - Competitor
      summary: Creates a new instance in competitorMetrics of this model.
      operationId: Competitor.prototype.__create__competitorMetrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/CompetitorMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/CompetitorMetric'
      deprecated: false
    delete:
      tags:
        - Competitor
      summary: Deletes all competitorMetrics of this model.
      operationId: Competitor.prototype.__delete__competitorMetrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Competitors/{id}/competitorMetrics/count':
    get:
      tags:
        - Competitor
      summary: Counts competitorMetrics of Competitor.
      operationId: Competitor.prototype.__count__competitorMetrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Competitors:
    post:
      tags:
        - Competitor
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Competitor.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Competitor'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
    put:
      tags:
        - Competitor
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: Competitor.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Competitor'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
    get:
      tags:
        - Competitor
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Competitor.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Competitor'
      deprecated: false
  '/Competitors/{id}/exists':
    get:
      tags:
        - Competitor
      summary: Check whether a model instance exists in the data source.
      operationId: 'Competitor.exists__get_Competitors_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Competitors/{id}':
    head:
      tags:
        - Competitor
      summary: Check whether a model instance exists in the data source.
      operationId: 'Competitor.exists__head_Competitors_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Competitor
      summary: Find a model instance by id from the data source.
      operationId: Competitor.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
    delete:
      tags:
        - Competitor
      summary: Delete a model instance by id from the data source.
      operationId: Competitor.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Competitor
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: Competitor.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Competitor'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
  /Competitors/findOne:
    get:
      tags:
        - Competitor
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Competitor.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Competitor'
      deprecated: false
  /Competitors/update:
    post:
      tags:
        - Competitor
      summary: Update instances of the model matched by where from the data source.
      operationId: Competitor.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Competitor'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Competitors/count:
    get:
      tags:
        - Competitor
      summary: Count instances of the model matched by where from the data source.
      operationId: Competitor.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Competitors/change-stream:
    post:
      tags:
        - Competitor
      summary: Create a change stream.
      operationId: Competitor.createChangeStream__post_Competitors_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Competitor
      summary: Create a change stream.
      operationId: Competitor.createChangeStream__get_Competitors_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/KeywordMetrics/{id}/company':
    get:
      tags:
        - KeywordMetric
      summary: Fetches belongsTo relation company.
      operationId: KeywordMetric.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/KeywordMetrics/{id}/keyword':
    get:
      tags:
        - KeywordMetric
      summary: Fetches belongsTo relation keyword.
      operationId: KeywordMetric.prototype.__get__keyword
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
  /KeywordMetrics:
    post:
      tags:
        - KeywordMetric
      summary: Create a new instance of the model and persist it into the data source.
      operationId: KeywordMetric.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    put:
      tags:
        - KeywordMetric
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: KeywordMetric.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    get:
      tags:
        - KeywordMetric
      summary: Find all instances of the model matched by filter from the data source.
      operationId: KeywordMetric.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/KeywordMetric'
      deprecated: false
  '/KeywordMetrics/{id}/exists':
    get:
      tags:
        - KeywordMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'KeywordMetric.exists__get_KeywordMetrics_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/KeywordMetrics/{id}':
    head:
      tags:
        - KeywordMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'KeywordMetric.exists__head_KeywordMetrics_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - KeywordMetric
      summary: Find a model instance by id from the data source.
      operationId: KeywordMetric.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    delete:
      tags:
        - KeywordMetric
      summary: Delete a model instance by id from the data source.
      operationId: KeywordMetric.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - KeywordMetric
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: KeywordMetric.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
  /KeywordMetrics/findOne:
    get:
      tags:
        - KeywordMetric
      summary: Find first instance of the model matched by filter from the data source.
      operationId: KeywordMetric.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
  /KeywordMetrics/update:
    post:
      tags:
        - KeywordMetric
      summary: Update instances of the model matched by where from the data source.
      operationId: KeywordMetric.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /KeywordMetrics/count:
    get:
      tags:
        - KeywordMetric
      summary: Count instances of the model matched by where from the data source.
      operationId: KeywordMetric.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /KeywordMetrics/change-stream:
    post:
      tags:
        - KeywordMetric
      summary: Create a change stream.
      operationId: KeywordMetric.createChangeStream__post_KeywordMetrics_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - KeywordMetric
      summary: Create a change stream.
      operationId: KeywordMetric.createChangeStream__get_KeywordMetrics_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Keywords/{id}/company':
    get:
      tags:
        - Keyword
      summary: Fetches belongsTo relation company.
      operationId: Keyword.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/Keywords/{id}/keywordMetrics/{fk}':
    get:
      tags:
        - Keyword
      summary: Find a related item by id for keywordMetrics.
      operationId: Keyword.prototype.__findById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    delete:
      tags:
        - Keyword
      summary: Delete a related item by id for keywordMetrics.
      operationId: Keyword.prototype.__destroyById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Keyword
      summary: Update a related item by id for keywordMetrics.
      operationId: Keyword.prototype.__updateById__keywordMetrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for keywordMetrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
  '/Keywords/{id}/keywordMetrics':
    get:
      tags:
        - Keyword
      summary: Queries keywordMetrics of Keyword.
      operationId: Keyword.prototype.__get__keywordMetrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/KeywordMetric'
      deprecated: false
    post:
      tags:
        - Keyword
      summary: Creates a new instance in keywordMetrics of this model.
      operationId: Keyword.prototype.__create__keywordMetrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/KeywordMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/KeywordMetric'
      deprecated: false
    delete:
      tags:
        - Keyword
      summary: Deletes all keywordMetrics of this model.
      operationId: Keyword.prototype.__delete__keywordMetrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Keywords/{id}/keywordMetrics/count':
    get:
      tags:
        - Keyword
      summary: Counts keywordMetrics of Keyword.
      operationId: Keyword.prototype.__count__keywordMetrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Keywords:
    post:
      tags:
        - Keyword
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Keyword.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Keyword'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
    put:
      tags:
        - Keyword
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: Keyword.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Keyword'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
    get:
      tags:
        - Keyword
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Keyword.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Keyword'
      deprecated: false
  '/Keywords/{id}/exists':
    get:
      tags:
        - Keyword
      summary: Check whether a model instance exists in the data source.
      operationId: 'Keyword.exists__get_Keywords_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Keywords/{id}':
    head:
      tags:
        - Keyword
      summary: Check whether a model instance exists in the data source.
      operationId: 'Keyword.exists__head_Keywords_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Keyword
      summary: Find a model instance by id from the data source.
      operationId: Keyword.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
    delete:
      tags:
        - Keyword
      summary: Delete a model instance by id from the data source.
      operationId: Keyword.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Keyword
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: Keyword.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Keyword'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
  /Keywords/findOne:
    get:
      tags:
        - Keyword
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Keyword.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Keyword'
      deprecated: false
  /Keywords/update:
    post:
      tags:
        - Keyword
      summary: Update instances of the model matched by where from the data source.
      operationId: Keyword.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Keyword'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Keywords/count:
    get:
      tags:
        - Keyword
      summary: Count instances of the model matched by where from the data source.
      operationId: Keyword.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Keywords/change-stream:
    post:
      tags:
        - Keyword
      summary: Create a change stream.
      operationId: Keyword.createChangeStream__post_Keywords_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Keyword
      summary: Create a change stream.
      operationId: Keyword.createChangeStream__get_Keywords_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/LandingPages/{id}/company':
    get:
      tags:
        - LandingPage
      summary: Fetches belongsTo relation company.
      operationId: LandingPage.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/LandingPages/{id}/metrics/{fk}':
    get:
      tags:
        - LandingPage
      summary: Find a related item by id for metrics.
      operationId: LandingPage.prototype.__findById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    delete:
      tags:
        - LandingPage
      summary: Delete a related item by id for metrics.
      operationId: LandingPage.prototype.__destroyById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - LandingPage
      summary: Update a related item by id for metrics.
      operationId: LandingPage.prototype.__updateById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
  '/LandingPages/{id}/metrics':
    get:
      tags:
        - LandingPage
      summary: Queries metrics of LandingPage.
      operationId: LandingPage.prototype.__get__metrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    post:
      tags:
        - LandingPage
      summary: Creates a new instance in metrics of this model.
      operationId: LandingPage.prototype.__create__metrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    delete:
      tags:
        - LandingPage
      summary: Deletes all metrics of this model.
      operationId: LandingPage.prototype.__delete__metrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/LandingPages/{id}/metrics/count':
    get:
      tags:
        - LandingPage
      summary: Counts metrics of LandingPage.
      operationId: LandingPage.prototype.__count__metrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /LandingPages:
    post:
      tags:
        - LandingPage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: LandingPage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
    put:
      tags:
        - LandingPage
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: LandingPage.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
    get:
      tags:
        - LandingPage
      summary: Find all instances of the model matched by filter from the data source.
      operationId: LandingPage.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/LandingPage'
      deprecated: false
  '/LandingPages/{id}/exists':
    get:
      tags:
        - LandingPage
      summary: Check whether a model instance exists in the data source.
      operationId: 'LandingPage.exists__get_LandingPages_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/LandingPages/{id}':
    head:
      tags:
        - LandingPage
      summary: Check whether a model instance exists in the data source.
      operationId: 'LandingPage.exists__head_LandingPages_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - LandingPage
      summary: Find a model instance by id from the data source.
      operationId: LandingPage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
    delete:
      tags:
        - LandingPage
      summary: Delete a model instance by id from the data source.
      operationId: LandingPage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - LandingPage
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: LandingPage.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
  /LandingPages/findOne:
    get:
      tags:
        - LandingPage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: LandingPage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
  /LandingPages/update:
    post:
      tags:
        - LandingPage
      summary: Update instances of the model matched by where from the data source.
      operationId: LandingPage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/LandingPage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /LandingPages/count:
    get:
      tags:
        - LandingPage
      summary: Count instances of the model matched by where from the data source.
      operationId: LandingPage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /LandingPages/change-stream:
    post:
      tags:
        - LandingPage
      summary: Create a change stream.
      operationId: LandingPage.createChangeStream__post_LandingPages_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - LandingPage
      summary: Create a change stream.
      operationId: LandingPage.createChangeStream__get_LandingPages_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/LandingPageMetrics/{id}/landingPage':
    get:
      tags:
        - LandingPageMetric
      summary: Fetches belongsTo relation landingPage.
      operationId: LandingPageMetric.prototype.__get__landingPage
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPage'
      deprecated: false
  /LandingPageMetrics:
    post:
      tags:
        - LandingPageMetric
      summary: Create a new instance of the model and persist it into the data source.
      operationId: LandingPageMetric.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    put:
      tags:
        - LandingPageMetric
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: LandingPageMetric.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    get:
      tags:
        - LandingPageMetric
      summary: Find all instances of the model matched by filter from the data source.
      operationId: LandingPageMetric.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/LandingPageMetric'
      deprecated: false
  '/LandingPageMetrics/{id}/exists':
    get:
      tags:
        - LandingPageMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'LandingPageMetric.exists__get_LandingPageMetrics_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/LandingPageMetrics/{id}':
    head:
      tags:
        - LandingPageMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'LandingPageMetric.exists__head_LandingPageMetrics_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - LandingPageMetric
      summary: Find a model instance by id from the data source.
      operationId: LandingPageMetric.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
    delete:
      tags:
        - LandingPageMetric
      summary: Delete a model instance by id from the data source.
      operationId: LandingPageMetric.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - LandingPageMetric
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: LandingPageMetric.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
  /LandingPageMetrics/findOne:
    get:
      tags:
        - LandingPageMetric
      summary: Find first instance of the model matched by filter from the data source.
      operationId: LandingPageMetric.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LandingPageMetric'
      deprecated: false
  /LandingPageMetrics/update:
    post:
      tags:
        - LandingPageMetric
      summary: Update instances of the model matched by where from the data source.
      operationId: LandingPageMetric.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/LandingPageMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /LandingPageMetrics/count:
    get:
      tags:
        - LandingPageMetric
      summary: Count instances of the model matched by where from the data source.
      operationId: LandingPageMetric.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /LandingPageMetrics/change-stream:
    post:
      tags:
        - LandingPageMetric
      summary: Create a change stream.
      operationId: LandingPageMetric.createChangeStream__post_LandingPageMetrics_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - LandingPageMetric
      summary: Create a change stream.
      operationId: LandingPageMetric.createChangeStream__get_LandingPageMetrics_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Referrers/{id}/company':
    get:
      tags:
        - Referrer
      summary: Fetches belongsTo relation company.
      operationId: Referrer.prototype.__get__company
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Company'
      deprecated: false
  '/Referrers/{id}/metrics/{fk}':
    get:
      tags:
        - Referrer
      summary: Find a related item by id for metrics.
      operationId: Referrer.prototype.__findById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    delete:
      tags:
        - Referrer
      summary: Delete a related item by id for metrics.
      operationId: Referrer.prototype.__destroyById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Referrer
      summary: Update a related item by id for metrics.
      operationId: Referrer.prototype.__updateById__metrics
      parameters:
        - name: fk
          in: path
          description: Foreign key for metrics
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
  '/Referrers/{id}/metrics':
    get:
      tags:
        - Referrer
      summary: Queries metrics of Referrer.
      operationId: Referrer.prototype.__get__metrics
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    post:
      tags:
        - Referrer
      summary: Creates a new instance in metrics of this model.
      operationId: Referrer.prototype.__create__metrics
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    delete:
      tags:
        - Referrer
      summary: Deletes all metrics of this model.
      operationId: Referrer.prototype.__delete__metrics
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Referrers/{id}/metrics/count':
    get:
      tags:
        - Referrer
      summary: Counts metrics of Referrer.
      operationId: Referrer.prototype.__count__metrics
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Referrers:
    post:
      tags:
        - Referrer
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Referrer.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Referrer'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
    put:
      tags:
        - Referrer
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: Referrer.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Referrer'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
    get:
      tags:
        - Referrer
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Referrer.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Referrer'
      deprecated: false
  '/Referrers/{id}/exists':
    get:
      tags:
        - Referrer
      summary: Check whether a model instance exists in the data source.
      operationId: 'Referrer.exists__get_Referrers_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Referrers/{id}':
    head:
      tags:
        - Referrer
      summary: Check whether a model instance exists in the data source.
      operationId: 'Referrer.exists__head_Referrers_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Referrer
      summary: Find a model instance by id from the data source.
      operationId: Referrer.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
    delete:
      tags:
        - Referrer
      summary: Delete a model instance by id from the data source.
      operationId: Referrer.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Referrer
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: Referrer.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Referrer'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
  /Referrers/findOne:
    get:
      tags:
        - Referrer
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Referrer.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
  /Referrers/update:
    post:
      tags:
        - Referrer
      summary: Update instances of the model matched by where from the data source.
      operationId: Referrer.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Referrer'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /Referrers/count:
    get:
      tags:
        - Referrer
      summary: Count instances of the model matched by where from the data source.
      operationId: Referrer.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /Referrers/change-stream:
    post:
      tags:
        - Referrer
      summary: Create a change stream.
      operationId: Referrer.createChangeStream__post_Referrers_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - Referrer
      summary: Create a change stream.
      operationId: Referrer.createChangeStream__get_Referrers_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/ReferrerMetrics/{id}/referrer':
    get:
      tags:
        - ReferrerMetric
      summary: Fetches belongsTo relation referrer.
      operationId: ReferrerMetric.prototype.__get__referrer
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Referrer'
      deprecated: false
  /ReferrerMetrics:
    post:
      tags:
        - ReferrerMetric
      summary: Create a new instance of the model and persist it into the data source.
      operationId: ReferrerMetric.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    put:
      tags:
        - ReferrerMetric
      summary: Update an existing model instance or insert a new one into the data source.
      operationId: ReferrerMetric.upsert
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    get:
      tags:
        - ReferrerMetric
      summary: Find all instances of the model matched by filter from the data source.
      operationId: ReferrerMetric.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/ReferrerMetric'
      deprecated: false
  '/ReferrerMetrics/{id}/exists':
    get:
      tags:
        - ReferrerMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'ReferrerMetric.exists__get_ReferrerMetrics_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/ReferrerMetrics/{id}':
    head:
      tags:
        - ReferrerMetric
      summary: Check whether a model instance exists in the data source.
      operationId: 'ReferrerMetric.exists__head_ReferrerMetrics_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - ReferrerMetric
      summary: Find a model instance by id from the data source.
      operationId: ReferrerMetric.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
    delete:
      tags:
        - ReferrerMetric
      summary: Delete a model instance by id from the data source.
      operationId: ReferrerMetric.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - ReferrerMetric
      summary: Update attributes for a model instance and persist it into the data source.
      operationId: ReferrerMetric.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
  /ReferrerMetrics/findOne:
    get:
      tags:
        - ReferrerMetric
      summary: Find first instance of the model matched by filter from the data source.
      operationId: ReferrerMetric.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ReferrerMetric'
      deprecated: false
  /ReferrerMetrics/update:
    post:
      tags:
        - ReferrerMetric
      summary: Update instances of the model matched by where from the data source.
      operationId: ReferrerMetric.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/ReferrerMetric'
      responses:
        '200':
          description: Request was successful
          schema:
            description: The number of instances updated
            type: object
      deprecated: false
  /ReferrerMetrics/count:
    get:
      tags:
        - ReferrerMetric
      summary: Count instances of the model matched by where from the data source.
      operationId: ReferrerMetric.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /ReferrerMetrics/change-stream:
    post:
      tags:
        - ReferrerMetric
      summary: Create a change stream.
      operationId: ReferrerMetric.createChangeStream__post_ReferrerMetrics_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    get:
      tags:
        - ReferrerMetric
      summary: Create a change stream.
      operationId: ReferrerMetric.createChangeStream__get_ReferrerMetrics_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
definitions:
  x-any:
    properties: {}
  AccessToken:
    properties:
      id:
        type: string
      ttl:
        default: 1209600
        description: time to live in seconds (2 weeks by default)
        type: number
        format: double
      created:
        type: string
        format: date
      userId:
        type: number
        format: double
    required:
      - id
    additionalProperties: false
  User:
    properties:
      realm:
        type: string
      username:
        type: string
      credentials:
        type: object
      challenges:
        type: object
      email:
        type: string
      emailVerified:
        type: boolean
      status:
        type: string
      created:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
      id:
        type: number
        format: double
    required:
      - email
    additionalProperties: false
  Company:
    properties:
      name:
        type: string
      poc:
        type: string
      url:
        type: string
      profileId:
        type: string
      sheetId:
        type: string
      webmasterAcct:
        type: string
      screenshotUrl:
        type: string
      logoUrl:
        type: string
      startDate:
        type: string
        format: date
      id:
        type: number
        format: double
      operatorId:
        type: number
        format: double
    required:
      - name
    additionalProperties: false
  Operator:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      realm:
        type: string
      username:
        type: string
      credentials:
        type: object
      challenges:
        type: object
      email:
        type: string
      emailVerified:
        type: boolean
      status:
        type: string
      created:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - firstName
      - lastName
      - email
    additionalProperties: false
  CompanyMetric:
    properties:
      month:
        type: string
        format: date
      domainAuthority:
        type: number
        format: double
      mozRank:
        type: number
        format: double
      mozTrust:
        type: number
        format: double
      followedLinks:
        type: number
        format: double
      totalExternalLinks:
        type: number
        format: double
      linkingRootDomains:
        type: number
        format: double
      impressions:
        type: number
        format: double
      clicks:
        type: number
        format: double
      ctr:
        type: number
        format: double
      position:
        type: number
        format: double
      pageViews:
        type: number
        format: double
      sessions:
        type: number
        format: double
      ppv:
        type: number
        format: double
      bounceRate:
        type: number
        format: double
      duration:
        type: number
        format: double
      pageLoadTime:
        type: number
        format: double
      uniquePageViews:
        type: number
        format: double
      bounces:
        type: number
        format: double
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - month
    additionalProperties: false
  CompetitorMetric:
    properties:
      month:
        type: string
        format: date
      domainAuthority:
        type: number
        format: double
      mozRank:
        type: number
        format: double
      mozTrust:
        type: number
        format: double
      followedLinks:
        type: number
        format: double
      totalExternalLinks:
        type: number
        format: double
      linkingRootDomains:
        type: number
        format: double
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
      competitorId:
        type: number
        format: double
    required:
      - month
    additionalProperties: false
  Competitor:
    properties:
      name:
        type: string
      url:
        type: string
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - name
      - url
    additionalProperties: false
  KeywordMetric:
    properties:
      month:
        type: string
        format: date
      minVolume:
        type: number
        format: double
      maxVolume:
        type: number
        format: double
      difficulty:
        type: number
        format: double
      potential:
        type: number
        format: double
      opportunity:
        type: number
        format: double
      impressions:
        type: number
        format: double
      clicks:
        type: number
        format: double
      ctr:
        type: number
        format: double
      position:
        type: number
        format: double
      natlRank:
        type: number
        format: double
      localRank:
        type: number
        format: double
      topPage:
        type: string
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
      keywordId:
        type: number
        format: double
    required:
      - month
    additionalProperties: false
  Keyword:
    properties:
      name:
        type: string
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - name
    additionalProperties: false
  LandingPage:
    properties:
      url:
        type: string
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - url
    additionalProperties: false
  Referrer:
    properties:
      url:
        type: string
      id:
        type: number
        format: double
      companyId:
        type: number
        format: double
    required:
      - url
    additionalProperties: false
  LandingPageMetric:
    properties:
      month:
        type: string
        format: date
      sessions:
        type: number
        format: double
      impressions:
        type: number
        format: double
      clicks:
        type: number
        format: double
      ctr:
        type: number
        format: double
      position:
        type: number
        format: double
      id:
        type: number
        format: double
      landingPageId:
        type: number
        format: double
    required:
      - month
    additionalProperties: false
  ReferrerMetric:
    properties:
      month:
        type: string
        format: date
      sessions:
        type: number
        format: double
      id:
        type: number
        format: double
      referrerId:
        type: number
        format: double
    required:
      - month
    additionalProperties: false
swagger: '2.0'
info:
  x-ibm-name: seo-reports
  version: 1.0.0
  title: seo-reports
schemes:
  - https
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  gateway: micro-gateway
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
